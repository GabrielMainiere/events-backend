name: "events-backend"
services:
  mspayments:
    container_name: mspayments
    build: /mspayments
    env_file:
      - /mspayments/.env
    ports:
      - 8081:8080
    depends_on:
      - mspayments-postgres
    networks:
      - mspayments
  mspayments-postgres:
    container_name: mspayments-postgres
    image: postgres:17.4-alpine
    ports:
      - "5433:5433"
    volumes:
      - ./.data/postgresql/data:/var/lib/postgresql
    env_file:
      - /mspayments/.env
    command: -p 5433
    networks:
      - mspayments
  
  msnotifications:
    container_name: msnotifications
    build:
      context: ./msnotifications
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
      - "50051:50051"
    env_file:
      - ./msnotifications/.env.docker
    depends_on:
      msnotifications-postgres:
        condition: service_healthy
    networks:
      - msnotifications
      - events-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  msnotifications-postgres:
    container_name: msnotifications-postgres
    image: postgres:17.2-alpine
    ports:
      - "5434:5432"
    env_file:
      - ./msnotifications/.env.docker
    volumes:
      - msnotifications-data:/var/lib/postgresql/data
    networks:
      - msnotifications
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-msnotifications}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  msnotifications-data:
    driver: local

networks:
  events-backend:
    driver: bridge
  mspayments:
    driver: bridge
  msnotifications:
    driver: bridge
# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  id: String!
  street: String!
  number: String
  city: String!
  state: String!
  zipcode: String!
  country: String!
}

type Event {
  id: String!
  title: String!
  description: String
  startAt: DateTime!
  endAt: DateTime!
  price: Int
  saleStartAt: DateTime
  saleEndAt: DateTime
  capacity: Float!
  isFree: Boolean!
  address: Address!
  status: EventStatus!
  eventType: EventType!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Status do evento"""
enum EventStatus {
  DRAFT
  ARCHIVED
  CONFIRMED
  WAITING_PAYMENT
  CANCELLED
}

"""Tipo do evento"""
enum EventType {
  MEETING
  CONFERENCE
  WORKSHOP
  PARTY
}

type Query {
  getEventById(id: String!): Event!
  events: [Event!]!
}

type Mutation {
  createEvent(input: CreateEventInput!): Event!
  updateEvent(input: UpdateEventInput!): Event!
  cancelEvent(input: CancelEventInput!): Event!
}

input CreateEventInput {
  title: String!
  description: String
  startAt: String!
  endAt: String
  price: Int
  saleStartAt: String
  saleEndAt: String
  address: AddressInput!
  capacity: Float!
  isFree: Boolean!
  status: EventStatus
  eventType: EventType
}

input AddressInput {
  street: String!
  number: String
  city: String!
  state: String!
  zipcode: String!
  country: String!
}

input UpdateEventInput {
  id: ID!
  title: String
  description: String
  startAt: DateTime
  endAt: DateTime
  price: Int
  isFree: Boolean
  capacity: Int
  address: AddressInput
}

input CancelEventInput {
  id: String!
}
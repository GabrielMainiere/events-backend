# -----------------------------
# Types
# -----------------------------
type Payment {
  id: ID!
  eventId: String!
  userDocument: String!
  amount: Int!
  method: PaymentMethod!
  gateway: PaymentGateway!
  gatewayTransactionId: String
  status: PaymentStatus!
  createdAt: String!
}

type PixData {
  qrCode: String
  qrCodeBase64: String
}

type CreditCardData {
  id: String
  status: String
}

type PaymentResponse {
  payment: Payment!
  pixData: PixData
  creditCardData: CreditCardData
}

# -----------------------------
# Enums
# -----------------------------
enum PaymentMethod {
  PIX
  CREDIT_CARD
}

enum PaymentGateway {
  STRIPE
  MERCADO_PAGO
}

enum PaymentStatus {
  PENDING
  APPROVED
  REJECTED
  CANCELED
}

# -----------------------------
# Input Types
# -----------------------------
input CreatePaymentInput {
  eventId: String!
  userDocument: String!
  amount: Int!
  method: PaymentMethod!
  gateway: PaymentGateway!
  cardToken: String
  installments: Int
  paymentMethodId: String
}

# -----------------------------
# Queries
# -----------------------------
type Query {
  payments: [Payment!]!
  paymentById(id: String!): Payment
  paymentsByEvent(eventId: String!): [Payment!]!
}

# -----------------------------
# Mutations
# -----------------------------
type Mutation {
  createPayment(input: CreatePaymentInput!): PaymentResponse!
}
